class Prompts():
    def __init__(self):
        pass

    @staticmethod
    def prompt_cmp_work_exp(user_work_exp_fmted: str, job_desc_exp_fmted: str) -> str:
        """
            Prompt generated by chatGPT-4o; for comparing work experience on resume to job description.

            Args:
                user_work_exp_fmted: [formated] work experience from user master resume (string)
                job_desc_exp_reqs_fmted: [formated] required/recommended work experience in job description (string)

            Returns:
                The prompt with the injected parameters entered. (string)

        """
        compare_work_experience: str = f'''
        > Evaluate how well a candidate's work experience matches a job description's required and preferred work experience.
        >
        > Your task:
        > - Read the candidate's work experience.
        > - Read the job description's required and preferred experience.
        > - Assign a similarity score between **0.0 and 1.0**, where:
        >   - `1.0` = Perfect match
        >   - `0.0` = No match at all
        > - Justify the score briefly in 2–4 bullet points.
        >
        > Return output in the following format:
        >
        > **Score**: `X.XX`
        > **Justification**:
        > - Bullet point 1
        > - Bullet point 2
        > - Bullet point 3
        >
        > ---
        > **Resume Work Experience:**
        > {user_work_exp_fmted}
        >
        > ---
        > **Job Description - Work Experience Requirements:**
        > {job_desc_exp_fmted}
        '''

        return compare_work_experience

    @staticmethod
    def prompt_cmp_edu(user_edu_fmted: str, job_desc_edu_fmted: str) -> str:
        """
            Prompt generated by chatGPT-4o; for comparing education on resume to job description.

            Args:
                user_edu_fmted: [formated] education of user from user master resume (string)
                job_desc_edu_fmted: [formated] required/recommended education in job description (string)

            Returns:
                The prompt with the injected parameters entered. (string)

        """
        compare_education: str = f'''
        > Evaluate how well a candidate's **educational background** matches the **education requirements** of a job description.
        >
        > Your task:
        > - Read the candidate’s education section.
        > - Read the job description’s required and preferred education.
        > - Assign a **similarity score between 0.0 and 1.0**, where:
        >   - `1.0` = Perfect match
        >   - `0.0` = No match
        > - Justify the score in 2–4 concise bullet points.
        >
        > Return your answer in this format:
        >
        > **Score**: `X.XX`
        > **Justification**:
        > - Bullet point 1
        > - Bullet point 2
        > - Bullet point 3
        >
        > ---
        > **Resume Education:**
        > {user_edu_fmted}
        >
        > ---
        > **Job Description - Education Requirements:**
        > {job_desc_edu_fmted}
        '''

        return compare_education

    @staticmethod
    def prompt_cmp_prj_acc(user_prjs_fmted: str, job_title: str) -> str:
        """
            Prompt generated by chatGPT-4o; for comparing projects on resume to job title/position.

            Args:
                user_prjs_fmted: [formated] projects from user master resume (string)
                job_title: the title/position of job posting (string)

            Returns:
                The prompt with the injected parameters entered. (string)

        """
        compare_project_accuracy: str = f'''
        > You are an AI assistant assessing how relevant a candidate’s listed **projects** are to a specific **job title or role**.
        >
        > Your task:
        > - Analyze the candidate’s project experience.
        > - Interpret the responsibilities, typical tools, and expected skills related to the given job title.
        > - Assign a **similarity score between 0.0 and 1.0**, where:
        >   - `1.0` = Highly relevant, directly aligned projects
        >   - `0.0` = No relevance to the job title
        > - Justify the score in 2–4 bullet points.
        >
        > Return your response in this format:
        >
        > **Score**: `X.XX`
        > **Justification**:
        > - Bullet point 1
        > - Bullet point 2
        > - Bullet point 3
        >
        > ---
        > **Resume Projects:**
        > {user_prjs_fmted}
        >
        > ---
        > **Job Title:**
        > {job_title}
        '''

        return compare_project_accuracy
